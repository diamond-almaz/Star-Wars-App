[{"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/index.js":"1","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/App.js":"2","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/redux/redux-store.js":"3","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/redux/planet-reducer.js":"4","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/redux/statistic-reducer.js":"5","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Statistics/statistics.js":"6","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Planets/planets.js":"7","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Navbar/navbar.js":"8","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/api/api.js":"9","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Statistics/ResouceDetails/resouceDetails.js":"10","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Preloader/Preloader.js":"11","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Planets/PlanetsDetails/planetsDetails.js":"12"},{"size":408,"mtime":1608619521669,"results":"13","hashOfConfig":"14"},{"size":677,"mtime":1608650631446,"results":"15","hashOfConfig":"14"},{"size":426,"mtime":1608652453445,"results":"16","hashOfConfig":"14"},{"size":1003,"mtime":1608737028841,"results":"17","hashOfConfig":"14"},{"size":732,"mtime":1608737375214,"results":"18","hashOfConfig":"14"},{"size":1978,"mtime":1608914545915,"results":"19","hashOfConfig":"14"},{"size":1912,"mtime":1608913038721,"results":"20","hashOfConfig":"14"},{"size":640,"mtime":1610387292003,"results":"21","hashOfConfig":"14"},{"size":352,"mtime":1608701524868,"results":"22","hashOfConfig":"14"},{"size":1911,"mtime":1608914830776,"results":"23","hashOfConfig":"14"},{"size":236,"mtime":1608914358863,"results":"24","hashOfConfig":"14"},{"size":1457,"mtime":1608898137367,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"an1n70",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/index.js",[],["55","56"],"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/App.js",[],"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/redux/redux-store.js",[],"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/redux/planet-reducer.js",[],"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/redux/statistic-reducer.js",[],"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Statistics/statistics.js",["57"],"import React from 'react'\nimport {connect} from \"react-redux\";\nimport {getRootResource} from \"../../redux/statistic-reducer\";\nimport './statistics.css'\nimport ResouceDetails from \"./ResouceDetails/resouceDetails\";\nimport Preloader from \"../Preloader/Preloader\";\n\n\n\nclass Statistics extends React.Component {\n    state={\n        actualResourceUrl: null,\n        actualResourceName: null,\n        loading: false\n    }\n    componentDidMount() {\n        getRootResource()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props!=prevProps) {\n            this.setState({\n                loading: !this.state.loading\n            })\n        }\n    }\n\n    render() {\n        let arr=[]\n        for (let i in this.props.rootResource) {\n            arr.push(\n                <><div className={'list-group-item list-group-item-action itemPlanet'} onClick={\n                    ()=>{\n                        this.setState({\n                            actualResourceUrl: this.props.rootResource[i],\n                            actualResourceName: i\n                        })\n                    }\n                }>{i}</div></>\n            )\n        }\n        console.log('Прорисовка statistics')\n        return (\n            <>\n                <div className=\"statistics\">\n                    {this.state.loading?\n                        <ul className={'\"list-group\"'}>\n                            <div className={'list-group-item list-group-item-action active title'} >Root resources</div>\n                            {arr}\n                        </ul>\n                        :<Preloader/>}\n\n                    <div className={'root-details'}>{this.state.actualResourceUrl!=null && <ResouceDetails state={this.state}/>}</div>\n                </div>\n                </>\n        )\n    }\n}\n\nlet mapStateToProps=(state)=>({\n    rootResource: state.statisticsPage.rootResource\n})\n\nexport default connect(mapStateToProps,getRootResource)(Statistics);","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Planets/planets.js",["58"],"import React from 'react'\nimport {connect} from \"react-redux\";\nimport {getListPlanets} from \"../../redux/planet-reducer\";\nimport PlanetsDetails from \"./PlanetsDetails/planetsDetails\";\nimport './planets.css'\nimport Preloader from \"../Preloader/Preloader\";\n\nclass Planets extends React.Component {\n    state = {\n        selectedPlanet: null,\n        loading: false\n    }\n\n    componentDidMount() {\n        this.props.getListPlanets();\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props!=prevProps) {\n            this.setState({\n                loading: !this.state.loading\n            })\n        }\n    }\n\n\n    render() {\n        let listPlanets = this.props.planets.map(i => {\n            return <button onClick={() => {\n                    this.setState({\n                        selectedPlanet: i\n                    })\n                }} key={i.name}\n                           type={'button'}\n                           className={'list-group-item list-group-item-action'}>{i.name}</button>\n\n        });\n\n\n\n        console.log('Прорисовка planet')\n        return (<>\n                <div className=\"planets\">\n                <div className='list-planet'>\n                    {\n                        this.state.loading ? <ul className={'\"list-group\"'}>\n                            <div className={'list-group-item list-group-item-action active title'}>Planets</div>\n\n                            {listPlanets}</ul> : <Preloader/>\n                    }\n\n                </div>\n                <div className='planets-details'>\n                    {this.state.selectedPlanet && <PlanetsDetails planetInfo={this.state.selectedPlanet}/>}\n                </div>\n                </div>\n            </>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    planets: state.planetsPage.listPlanets\n})\n\nexport default connect(mapStateToProps, {getListPlanets})(Planets);","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Navbar/navbar.js",[],"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/api/api.js",[],"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Statistics/ResouceDetails/resouceDetails.js",["59","60","61","62"],"import React from 'react'\nimport * as axios from \"axios\";\nimport {swAPI} from \"../../../api/api\";\nimport Preloader from \"../../Preloader/Preloader\";\n\n\nclass ResouceDetails extends React.Component {\n    state={\n        details: {},\n        loading: false\n\n\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount из statisticsDetails')\n        swAPI.getResourceDetails(this.props.state.actualResourceUrl)\n            .then(resp=>{\n            this.setState({\n                details: this.props.state.actualResourceName=='films'?resp.data.results.map(i=>i.title):resp.data.results.map(i=>i.name),\n                loading: true\n            })\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if (prevProps!=this.props)\n        {\n            this.setState({\n                loading: false\n            })\n            console.log('componentDidUpdate из statisticsDetails')\n            swAPI.getResourceDetails(this.props.state.actualResourceUrl).then(resp=>{\n                this.setState({\n                    details: this.props.state.actualResourceName=='films'?resp.data.results.map(i=>i.title):resp.data.results.map(i=>i.name),\n                    loading: true\n                })\n            })\n        }\n    }\n\n\n    render() {\n        let newArr;\n        if (Object.keys(this.state.details).length !== 0) {\n            newArr=this.state.details.map(i=>{\n                return <li className=\"list-group-item\">{i}</li>\n            })\n        }\n\n        console.log('Прорисовка statisticsDetails')\n\n        return (<>\n                {this.state.loading?<ul className=\"list-group-flush\">\n                    <li className=\"list-group-item active title\" aria-current=\"true\">{this.props.state.actualResourceName}</li>\n                    {newArr}\n                </ul>:<Preloader/>}\n\n            </>\n        )\n    }\n}\n\nexport default ResouceDetails","/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Preloader/Preloader.js",[],"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Planets/PlanetsDetails/planetsDetails.js",["63","64","65"],"import React from 'react'\nimport * as axios from 'axios'\n\nclass PlanetsDetails extends React.Component {\n\n    render() {\n        let {\n            climate, created, diameter,\n            edited, films, gravity, name,\n            orbital_period, population,residents,\n            rotation_period, surface_water, terrain,\n        } = this.props.planetInfo\n        console.log('Прорисовка planetDetails')\n\n        return (\n\n                <ul className=\"list-group-flush\">\n                    <li className=\"list-group-item actives\" aria-current=\"true\">{name}</li>\n                    <li className=\"list-group-item\">Climate: {climate}</li>\n                    <li className=\"list-group-item\">Created: {created}</li>\n                    <li className=\"list-group-item\">Diameter: {diameter}</li>\n                    <li className=\"list-group-item\">Edited: {edited}</li>\n                    <li className=\"list-group-item\">Gravity: {gravity}</li>\n                    <li className=\"list-group-item\">Orbital period: {orbital_period}</li>\n                    <li className=\"list-group-item\">population: {population}</li>\n                    <li className=\"list-group-item\">Rotation_period: {rotation_period}</li>\n                    <li className=\"list-group-item\">Surface_water: {surface_water}</li>\n                    <li className=\"list-group-item\">Terrain: {terrain}</li>\n                </ul>\n        )\n    }\n}\n\nexport default PlanetsDetails;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":21,"column":23,"nodeType":"72","messageId":"73","endLine":21,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":18,"column":23,"nodeType":"72","messageId":"73","endLine":18,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":2,"column":13,"nodeType":"76","messageId":"77","endLine":2,"endColumn":18},{"ruleId":"70","severity":1,"message":"78","line":20,"column":61,"nodeType":"72","messageId":"73","endLine":20,"endColumn":63},{"ruleId":"70","severity":1,"message":"71","line":28,"column":22,"nodeType":"72","messageId":"73","endLine":28,"endColumn":24},{"ruleId":"70","severity":1,"message":"78","line":36,"column":65,"nodeType":"72","messageId":"73","endLine":36,"endColumn":67},{"ruleId":"74","severity":1,"message":"75","line":2,"column":13,"nodeType":"76","messageId":"77","endLine":2,"endColumn":18},{"ruleId":"74","severity":1,"message":"79","line":9,"column":21,"nodeType":"76","messageId":"77","endLine":9,"endColumn":26},{"ruleId":"74","severity":1,"message":"80","line":10,"column":40,"nodeType":"76","messageId":"77","endLine":10,"endColumn":49},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","Expected '===' and instead saw '=='.","'films' is assigned a value but never used.","'residents' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]