{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Statistics/statistics.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { getRootResource } from \"../../redux/statistic-reducer\";\nimport './statistics.css';\nimport ResouceDetails from \"./ResouceDetails/resouceDetails\";\nimport Preloader from \"../Preloader/Preloader\";\n\nclass Statistics extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      actualResourceUrl: null,\n      actualResourceName: null,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    getRootResource();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props != prevProps) {\n      this.setState({\n        loading: !this.state.loading\n      });\n    }\n  }\n\n  render() {\n    let arr = [];\n\n    for (let i in this.props.rootResource) {\n      arr.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'list-group-item list-group-item-action itemPlanet',\n          onClick: () => {\n            this.setState({\n              actualResourceUrl: this.props.rootResource[i],\n              actualResourceName: i\n            });\n          },\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }, this)\n      }, void 0, false));\n    }\n\n    console.log('Прорисовка statistics');\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statistics\",\n        children: [this.state.loading ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: '\"list-group\"',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'list-group-item list-group-item-action active title',\n            children: \"Root resources\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), arr]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: 'root-details',\n          children: this.state.actualResourceUrl != null && /*#__PURE__*/_jsxDEV(ResouceDetails, {\n            state: this.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 92\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  rootResource: state.statisticsPage.rootResource\n});\n\nexport default connect(mapStateToProps, getRootResource)(Statistics);","map":{"version":3,"sources":["/Users/almazsaripov/Documents/Projects/Star-Wars-App/src/components/Statistics/statistics.js"],"names":["React","connect","getRootResource","ResouceDetails","Preloader","Statistics","Component","state","actualResourceUrl","actualResourceName","loading","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","props","setState","render","arr","i","rootResource","push","console","log","mapStateToProps","statisticsPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,+BAA9B;AACA,OAAO,kBAAP;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAIA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC/B;AACFC,MAAAA,iBAAiB,EAAE,IADjB;AAEFC,MAAAA,kBAAkB,EAAE,IAFlB;AAGFC,MAAAA,OAAO,EAAE;AAHP,KAD+B;AAAA;;AAMrCC,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,eAAe;AAClB;;AAEDU,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAI,KAAKC,KAAL,IAAYH,SAAhB,EAA2B;AACvB,WAAKI,QAAL,CAAc;AACVP,QAAAA,OAAO,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADX,OAAd;AAGH;AACJ;;AAEDQ,EAAAA,MAAM,GAAG;AACL,QAAIC,GAAG,GAAC,EAAR;;AACA,SAAK,IAAIC,CAAT,IAAc,KAAKJ,KAAL,CAAWK,YAAzB,EAAuC;AACnCF,MAAAA,GAAG,CAACG,IAAJ,eACI;AAAA,+BAAE;AAAK,UAAA,SAAS,EAAE,mDAAhB;AAAqE,UAAA,OAAO,EAC1E,MAAI;AACA,iBAAKL,QAAL,CAAc;AACVT,cAAAA,iBAAiB,EAAE,KAAKQ,KAAL,CAAWK,YAAX,CAAwBD,CAAxB,CADT;AAEVX,cAAAA,kBAAkB,EAAEW;AAFV,aAAd;AAIH,WANH;AAAA,oBAOCA;AAPD;AAAA;AAAA;AAAA;AAAA;AAAF,uBADJ;AAUH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,mBACK,KAAKjB,KAAL,CAAWG,OAAX,gBACG;AAAI,UAAA,SAAS,EAAE,cAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAE,qDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKS,GAFL;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,gBAKI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBANT,eAQI;AAAK,UAAA,SAAS,EAAE,cAAhB;AAAA,oBAAiC,KAAKZ,KAAL,CAAWC,iBAAX,IAA8B,IAA9B,iBAAsC,QAAC,cAAD;AAAgB,YAAA,KAAK,EAAE,KAAKD;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAvE;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAcH;;AA/CoC;;AAkDzC,IAAIkB,eAAe,GAAElB,KAAD,KAAU;AAC1Bc,EAAAA,YAAY,EAAEd,KAAK,CAACmB,cAAN,CAAqBL;AADT,CAAV,CAApB;;AAIA,eAAepB,OAAO,CAACwB,eAAD,EAAiBvB,eAAjB,CAAP,CAAyCG,UAAzC,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from \"react-redux\";\nimport {getRootResource} from \"../../redux/statistic-reducer\";\nimport './statistics.css'\nimport ResouceDetails from \"./ResouceDetails/resouceDetails\";\nimport Preloader from \"../Preloader/Preloader\";\n\n\n\nclass Statistics extends React.Component {\n    state={\n        actualResourceUrl: null,\n        actualResourceName: null,\n        loading: false\n    }\n    componentDidMount() {\n        getRootResource()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props!=prevProps) {\n            this.setState({\n                loading: !this.state.loading\n            })\n        }\n    }\n\n    render() {\n        let arr=[]\n        for (let i in this.props.rootResource) {\n            arr.push(\n                <><div className={'list-group-item list-group-item-action itemPlanet'} onClick={\n                    ()=>{\n                        this.setState({\n                            actualResourceUrl: this.props.rootResource[i],\n                            actualResourceName: i\n                        })\n                    }\n                }>{i}</div></>\n            )\n        }\n        console.log('Прорисовка statistics')\n        return (\n            <>\n                <div className=\"statistics\">\n                    {this.state.loading?\n                        <ul className={'\"list-group\"'}>\n                            <div className={'list-group-item list-group-item-action active title'} >Root resources</div>\n                            {arr}\n                        </ul>\n                        :<Preloader/>}\n\n                    <div className={'root-details'}>{this.state.actualResourceUrl!=null && <ResouceDetails state={this.state}/>}</div>\n                </div>\n                </>\n        )\n    }\n}\n\nlet mapStateToProps=(state)=>({\n    rootResource: state.statisticsPage.rootResource\n})\n\nexport default connect(mapStateToProps,getRootResource)(Statistics);"]},"metadata":{},"sourceType":"module"}