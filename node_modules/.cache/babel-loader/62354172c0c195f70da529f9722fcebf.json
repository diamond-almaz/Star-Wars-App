{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/almazsaripov/WebstormProjects/test-from-hh/src/components/PlanetsDetails/planetsDetails.js\";\nimport React from 'react';\nimport * as axios from 'axios';\n\nclass PlanetsDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      films: null,\n      residents: null\n    };\n  }\n\n  componentDidMount() {\n    let filmsPromise = Promise.all(this.props.planetInfo.films.map(i => {\n      return axios.get(i).then(res => res.data.title);\n    }));\n    let residentsPromise = Promise.all(this.props.planetInfo.residents.map(i => {\n      return axios.get(i).then(res => res.data.title);\n    }));\n    let films = [];\n    filmsPromise.then(responses => {\n      for (let response of responses) {\n        films.push(response);\n      }\n    });\n    console.log(films); // this.setState({\n    //     films: films,\n    //     residents: residents\n    // })\n  }\n\n  render() {\n    console.log(this.state);\n    let {\n      climate,\n      created,\n      diameter,\n      edited,\n      films,\n      gravity,\n      name,\n      orbital_period,\n      population,\n      residents,\n      rotation_period,\n      surface_water,\n      terrain\n    } = this.props.planetInfo;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Climate: \", climate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Created: \", created]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Diameter: \", diameter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Edited: \", edited]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Films: \", films]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Gravity: \", gravity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Orbital period: \", orbital_period]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"population: \", population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Residents: \", residents]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Rotation_period: \", rotation_period]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Surface_water: \", surface_water]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Terrain: \", terrain]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"population: \", population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PlanetsDetails;","map":{"version":3,"sources":["/Users/almazsaripov/WebstormProjects/test-from-hh/src/components/PlanetsDetails/planetsDetails.js"],"names":["React","axios","PlanetsDetails","Component","state","films","residents","componentDidMount","filmsPromise","Promise","all","props","planetInfo","map","i","get","then","res","data","title","residentsPromise","responses","response","push","console","log","render","climate","created","diameter","edited","gravity","name","orbital_period","population","rotation_period","surface_water","terrain"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as axios from 'axios'\n\nclass PlanetsDetails extends React.Component {\n\n    state={\n        films: null,\n        residents: null\n    }\n\n\n    componentDidMount() {\n        let filmsPromise=Promise.all(this.props.planetInfo.films.map(i=>{\n            return axios.get(i).then(res=>res.data.title)\n        }));\n        let residentsPromise=Promise.all(this.props.planetInfo.residents.map(i=>{\n            return axios.get(i).then(res=>res.data.title)\n        }))\n        let films=[];\n        filmsPromise.then(responses=>{\n            for(let response of responses)\n            {\n                films.push(response)\n            }\n        })\n        console.log(films)\n        // this.setState({\n        //     films: films,\n        //     residents: residents\n        // })\n\n    }\n\n    render() {\n        console.log(this.state)\n        let {\n            climate, created, diameter,\n            edited, films, gravity, name,\n            orbital_period, population,residents,\n            rotation_period, surface_water, terrain,\n        } = this.props.planetInfo\n        return (\n            <div>\n                <h3>{name}</h3>\n                <div>Climate: {climate}</div>\n                <div>Created: {created}</div>\n                <div>Diameter: {diameter}</div>\n                <div>Edited: {edited}</div>\n                <div>Films: {films}</div>\n                <div>Gravity: {gravity}</div>\n                <div>Orbital period: {orbital_period}</div>\n                <div>population: {population}</div>\n                <div>Residents: {residents}</div>\n                <div>Rotation_period: {rotation_period}</div>\n                <div>Surface_water: {surface_water}</div>\n                <div>Terrain: {terrain}</div>\n                <div>population: {population}</div>\n            </div>\n        )\n    }\n}\n\nexport default PlanetsDetails;"]},"metadata":{},"sourceType":"module"}